var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

import React from 'react';

import classNames from 'classnames';
import withStyles from '../styles/withStyles';
import { capitalizeFirstLetter } from '../utils/helpers';

export const styles = theme => ({
  root: {
    display: 'inline-block',
    fill: 'currentColor',
    height: 24,
    width: 24,
    userSelect: 'none',
    flexShrink: 0,
    transition: theme.transitions.create('fill', {
      duration: theme.transitions.duration.shorter
    })
  },
  colorAccent: {
    color: theme.palette.secondary.A200
  },
  colorAction: {
    color: theme.palette.action.active
  },
  colorContrast: {
    color: theme.palette.getContrastText(theme.palette.primary[500])
  },
  colorDisabled: {
    color: theme.palette.action.disabled
  },
  colorError: {
    color: theme.palette.error[500]
  },
  colorPrimary: {
    color: theme.palette.primary[500]
  }
});

class SvgIcon extends React.Component {

  render() {
    const _props = this.props,
          {
      children,
      classes,
      className: classNameProp,
      color,
      titleAccess,
      viewBox
    } = _props,
          other = _objectWithoutProperties(_props, ['children', 'classes', 'className', 'color', 'titleAccess', 'viewBox']);

    const className = classNames(classes.root, {
      [classes[`color${capitalizeFirstLetter(color)}`]]: color !== 'inherit'
    }, classNameProp);

    return React.createElement(
      'svg',
      _extends({
        className: className,
        focusable: 'false',
        viewBox: viewBox,
        'aria-hidden': titleAccess ? 'false' : 'true'
      }, other),
      titleAccess ? React.createElement(
        'title',
        null,
        titleAccess
      ) : null,
      children
    );
  }
}

SvgIcon.defaultProps = {
  viewBox: '0 0 24 24',
  color: 'inherit'
};
SvgIcon.muiName = 'SvgIcon';
export default withStyles(styles, { name: 'MuiSvgIcon' })(SvgIcon);